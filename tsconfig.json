{
    "include": [
        "${configDir}/src",
    ],
    "exclude": [
        "${configDir}/dist",
        "${configDir}/node_modules",
    ],
    "compilerOptions": {
        /* Language and Environment */
        "target": "ESNext",                                 /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
        "lib": ["ESNext", "DOM"],                           /* Specify a set of bundled library declaration files that describe the target runtime environment. */
        // "jsx": "react-jsx",                                 /* Specify what JSX code is generated. */
        "useDefineForClassFields": true,                    /* Emit ECMAScript-standard-compliant class fields. */

        /* Modules */
        "module": "ESNext",                                 /* Specify what module code is generated. */
        "moduleResolution": "node",                         /* Specify how TypeScript looks up a file from a given module specifier. */
        "rootDir": "${configDir}/src",                      /* Specify the root folder within your source files. */
        // "resolveJsonModule": true,                          /* Enable importing .json files. */

        /* Emit */
        // "noEmit": true,                                     /* Disable emitting files from a compilation. */
        "declaration": true,                                /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "sourceMap": true,                                  /* Create source map files for emitted JavaScript files. */
        "outDir": "${configDir}/dist",                      /* Specify an output folder for all emitted files. */

        /* Interop Constraints */
        "isolatedModules": true,                            /* Ensure that each file can be safely transpiled without relying on other imports. */
        "esModuleInterop": true,                            /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        "forceConsistentCasingInFileNames": true,           /* Ensure that casing is correct in imports. */

        /* Type Checking */
		"strict": true, // Enable all strict type-checking options.
		"noUnusedLocals": true, // Enable error reporting when local variables aren't read.
		"noUnusedParameters": true, // Raise an error when a function parameter isn't read.
		"noImplicitReturns": true, // Check all code paths in a function to ensure they return a value.
		"noImplicitOverride": true, // Function overrides must be explicitly marked with the `override` modifier.
		"noFallthroughCasesInSwitch": true, // Ensure that non-empty cases inside a switch statement include either break, return, or throw.
		// "noUncheckedIndexedAccess": true, // obj["key"] returns `string | undefined`.
		"noPropertyAccessFromIndexSignature": true, // obj.unknownProp â†’ error, use obj["unknownProp"].
		"exactOptionalPropertyTypes": true, // Distinguish between undefined and missing optional properties.

        /* Completeness */
        "skipLibCheck": true                                /* Skip type checking all .d.ts files. */
    }
}
